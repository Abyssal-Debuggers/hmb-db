//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var StoryTag = newStoryTagTable("hmb", "story_tag", "")

type storyTagTable struct {
	postgres.Table

	// Columns
	StoryID postgres.ColumnString
	Tag     postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StoryTagTable struct {
	storyTagTable

	EXCLUDED storyTagTable
}

// AS creates new StoryTagTable with assigned alias
func (a StoryTagTable) AS(alias string) *StoryTagTable {
	return newStoryTagTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StoryTagTable with assigned schema name
func (a StoryTagTable) FromSchema(schemaName string) *StoryTagTable {
	return newStoryTagTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new StoryTagTable with assigned table prefix
func (a StoryTagTable) WithPrefix(prefix string) *StoryTagTable {
	return newStoryTagTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new StoryTagTable with assigned table suffix
func (a StoryTagTable) WithSuffix(suffix string) *StoryTagTable {
	return newStoryTagTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newStoryTagTable(schemaName, tableName, alias string) *StoryTagTable {
	return &StoryTagTable{
		storyTagTable: newStoryTagTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newStoryTagTableImpl("", "excluded", ""),
	}
}

func newStoryTagTableImpl(schemaName, tableName, alias string) storyTagTable {
	var (
		StoryIDColumn  = postgres.StringColumn("story_id")
		TagColumn      = postgres.StringColumn("tag")
		allColumns     = postgres.ColumnList{StoryIDColumn, TagColumn}
		mutableColumns = postgres.ColumnList{StoryIDColumn, TagColumn}
	)

	return storyTagTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StoryID: StoryIDColumn,
		Tag:     TagColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
