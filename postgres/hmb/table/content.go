//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Content = newContentTable("hmb", "content", "")

type contentTable struct {
	postgres.Table

	// Columns
	StoryID postgres.ColumnString
	SeqNo   postgres.ColumnInteger
	Raw     postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ContentTable struct {
	contentTable

	EXCLUDED contentTable
}

// AS creates new ContentTable with assigned alias
func (a ContentTable) AS(alias string) *ContentTable {
	return newContentTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ContentTable with assigned schema name
func (a ContentTable) FromSchema(schemaName string) *ContentTable {
	return newContentTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ContentTable with assigned table prefix
func (a ContentTable) WithPrefix(prefix string) *ContentTable {
	return newContentTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ContentTable with assigned table suffix
func (a ContentTable) WithSuffix(suffix string) *ContentTable {
	return newContentTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newContentTable(schemaName, tableName, alias string) *ContentTable {
	return &ContentTable{
		contentTable: newContentTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newContentTableImpl("", "excluded", ""),
	}
}

func newContentTableImpl(schemaName, tableName, alias string) contentTable {
	var (
		StoryIDColumn  = postgres.StringColumn("story_id")
		SeqNoColumn    = postgres.IntegerColumn("seq_no")
		RawColumn      = postgres.StringColumn("raw")
		allColumns     = postgres.ColumnList{StoryIDColumn, SeqNoColumn, RawColumn}
		mutableColumns = postgres.ColumnList{StoryIDColumn, SeqNoColumn, RawColumn}
	)

	return contentTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StoryID: StoryIDColumn,
		SeqNo:   SeqNoColumn,
		Raw:     RawColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
